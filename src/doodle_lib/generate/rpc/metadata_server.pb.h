// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metadata_server.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_metadata_5fserver_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_metadata_5fserver_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "user_message.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_metadata_5fserver_2eproto DOODLELIB_API
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct DOODLELIB_API TableStruct_metadata_5fserver_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
DOODLELIB_API extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_metadata_5fserver_2eproto;
namespace doodle {
class metadata_database;
struct metadata_databaseDefaultTypeInternal;
DOODLELIB_API extern metadata_databaseDefaultTypeInternal _metadata_database_default_instance_;
class metadata_database_filter;
struct metadata_database_filterDefaultTypeInternal;
DOODLELIB_API extern metadata_database_filterDefaultTypeInternal _metadata_database_filter_default_instance_;
}  // namespace doodle
PROTOBUF_NAMESPACE_OPEN
template<> DOODLELIB_API ::doodle::metadata_database* Arena::CreateMaybeMessage<::doodle::metadata_database>(Arena*);
template<> DOODLELIB_API ::doodle::metadata_database_filter* Arena::CreateMaybeMessage<::doodle::metadata_database_filter>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace doodle {

// ===================================================================

class DOODLELIB_API metadata_database final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:doodle.metadata_database) */ {
 public:
  inline metadata_database() : metadata_database(nullptr) {}
  ~metadata_database() override;
  explicit constexpr metadata_database(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  metadata_database(const metadata_database& from);
  metadata_database(metadata_database&& from) noexcept
    : metadata_database() {
    *this = ::std::move(from);
  }

  inline metadata_database& operator=(const metadata_database& from) {
    CopyFrom(from);
    return *this;
  }
  inline metadata_database& operator=(metadata_database&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const metadata_database& default_instance() {
    return *internal_default_instance();
  }
  static inline const metadata_database* internal_default_instance() {
    return reinterpret_cast<const metadata_database*>(
               &_metadata_database_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(metadata_database& a, metadata_database& b) {
    a.Swap(&b);
  }
  inline void Swap(metadata_database* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(metadata_database* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline metadata_database* New() const final {
    return new metadata_database();
  }

  metadata_database* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<metadata_database>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const metadata_database& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const metadata_database& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(metadata_database* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "doodle.metadata_database";
  }
  protected:
  explicit metadata_database(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUuidPathFieldNumber = 2,
    kParentFieldNumber = 3,
    kUpdateTimeFieldNumber = 4,
    kMetadataCerealFieldNumber = 5,
    kMTypeFieldNumber = 6,
    kEpisodeFieldNumber = 7,
    kShotFieldNumber = 8,
    kSeasonFieldNumber = 9,
    kAssetsFieldNumber = 10,
    kIdFieldNumber = 1,
  };
  // string uuid_path = 2;
  void clear_uuid_path();
  const std::string& uuid_path() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_uuid_path(ArgT0&& arg0, ArgT... args);
  std::string* mutable_uuid_path();
  PROTOBUF_MUST_USE_RESULT std::string* release_uuid_path();
  void set_allocated_uuid_path(std::string* uuid_path);
  private:
  const std::string& _internal_uuid_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uuid_path(const std::string& value);
  std::string* _internal_mutable_uuid_path();
  public:

  // .google.protobuf.UInt64Value parent = 3;
  bool has_parent() const;
  private:
  bool _internal_has_parent() const;
  public:
  void clear_parent();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& parent() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_parent();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_parent();
  void set_allocated_parent(::PROTOBUF_NAMESPACE_ID::UInt64Value* parent);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_parent() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_parent();
  public:
  void unsafe_arena_set_allocated_parent(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* parent);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_parent();

  // .google.protobuf.Timestamp update_time = 4;
  bool has_update_time() const;
  private:
  bool _internal_has_update_time() const;
  public:
  void clear_update_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& update_time() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::Timestamp* release_update_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_update_time();
  void set_allocated_update_time(::PROTOBUF_NAMESPACE_ID::Timestamp* update_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_update_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_update_time();
  public:
  void unsafe_arena_set_allocated_update_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* update_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_update_time();

  // .google.protobuf.Any Metadata_cereal = 5;
  bool has_metadata_cereal() const;
  private:
  bool _internal_has_metadata_cereal() const;
  public:
  void clear_metadata_cereal();
  const ::PROTOBUF_NAMESPACE_ID::Any& metadata_cereal() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::Any* release_metadata_cereal();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_metadata_cereal();
  void set_allocated_metadata_cereal(::PROTOBUF_NAMESPACE_ID::Any* metadata_cereal);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_metadata_cereal() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_metadata_cereal();
  public:
  void unsafe_arena_set_allocated_metadata_cereal(
      ::PROTOBUF_NAMESPACE_ID::Any* metadata_cereal);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_metadata_cereal();

  // .google.protobuf.UInt64Value m_type = 6;
  bool has_m_type() const;
  private:
  bool _internal_has_m_type() const;
  public:
  void clear_m_type();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& m_type() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_m_type();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_m_type();
  void set_allocated_m_type(::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_m_type() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_m_type();
  public:
  void unsafe_arena_set_allocated_m_type(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_m_type();

  // .google.protobuf.UInt64Value episode = 7;
  bool has_episode() const;
  private:
  bool _internal_has_episode() const;
  public:
  void clear_episode();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& episode() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_episode();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_episode();
  void set_allocated_episode(::PROTOBUF_NAMESPACE_ID::UInt64Value* episode);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_episode() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_episode();
  public:
  void unsafe_arena_set_allocated_episode(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* episode);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_episode();

  // .google.protobuf.UInt64Value shot = 8;
  bool has_shot() const;
  private:
  bool _internal_has_shot() const;
  public:
  void clear_shot();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& shot() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_shot();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_shot();
  void set_allocated_shot(::PROTOBUF_NAMESPACE_ID::UInt64Value* shot);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_shot() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_shot();
  public:
  void unsafe_arena_set_allocated_shot(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* shot);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_shot();

  // .google.protobuf.UInt64Value season = 9;
  bool has_season() const;
  private:
  bool _internal_has_season() const;
  public:
  void clear_season();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& season() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_season();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_season();
  void set_allocated_season(::PROTOBUF_NAMESPACE_ID::UInt64Value* season);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_season() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_season();
  public:
  void unsafe_arena_set_allocated_season(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* season);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_season();

  // .google.protobuf.StringValue assets = 10;
  bool has_assets() const;
  private:
  bool _internal_has_assets() const;
  public:
  void clear_assets();
  const ::PROTOBUF_NAMESPACE_ID::StringValue& assets() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::StringValue* release_assets();
  ::PROTOBUF_NAMESPACE_ID::StringValue* mutable_assets();
  void set_allocated_assets(::PROTOBUF_NAMESPACE_ID::StringValue* assets);
  private:
  const ::PROTOBUF_NAMESPACE_ID::StringValue& _internal_assets() const;
  ::PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_assets();
  public:
  void unsafe_arena_set_allocated_assets(
      ::PROTOBUF_NAMESPACE_ID::StringValue* assets);
  ::PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_assets();

  // uint64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:doodle.metadata_database)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr uuid_path_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* parent_;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* update_time_;
  ::PROTOBUF_NAMESPACE_ID::Any* metadata_cereal_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* episode_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* shot_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* season_;
  ::PROTOBUF_NAMESPACE_ID::StringValue* assets_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_metadata_5fserver_2eproto;
};
// -------------------------------------------------------------------

class DOODLELIB_API metadata_database_filter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:doodle.metadata_database_filter) */ {
 public:
  inline metadata_database_filter() : metadata_database_filter(nullptr) {}
  ~metadata_database_filter() override;
  explicit constexpr metadata_database_filter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  metadata_database_filter(const metadata_database_filter& from);
  metadata_database_filter(metadata_database_filter&& from) noexcept
    : metadata_database_filter() {
    *this = ::std::move(from);
  }

  inline metadata_database_filter& operator=(const metadata_database_filter& from) {
    CopyFrom(from);
    return *this;
  }
  inline metadata_database_filter& operator=(metadata_database_filter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const metadata_database_filter& default_instance() {
    return *internal_default_instance();
  }
  static inline const metadata_database_filter* internal_default_instance() {
    return reinterpret_cast<const metadata_database_filter*>(
               &_metadata_database_filter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(metadata_database_filter& a, metadata_database_filter& b) {
    a.Swap(&b);
  }
  inline void Swap(metadata_database_filter* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(metadata_database_filter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline metadata_database_filter* New() const final {
    return new metadata_database_filter();
  }

  metadata_database_filter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<metadata_database_filter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const metadata_database_filter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const metadata_database_filter& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(metadata_database_filter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "doodle.metadata_database_filter";
  }
  protected:
  explicit metadata_database_filter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBeginTimeFieldNumber = 2,
    kEndTimeFieldNumber = 3,
    kMTypeFieldNumber = 4,
    kParentFieldNumber = 5,
    kEpisodeFieldNumber = 6,
    kShotFieldNumber = 7,
    kSeasonFieldNumber = 8,
    kAssetsFieldNumber = 9,
    kBegOffIdFieldNumber = 10,
    kOffSizeFieldNumber = 11,
    kIdFieldNumber = 1,
  };
  // .google.protobuf.Timestamp begin_time = 2;
  bool has_begin_time() const;
  private:
  bool _internal_has_begin_time() const;
  public:
  void clear_begin_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& begin_time() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::Timestamp* release_begin_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_begin_time();
  void set_allocated_begin_time(::PROTOBUF_NAMESPACE_ID::Timestamp* begin_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_begin_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_begin_time();
  public:
  void unsafe_arena_set_allocated_begin_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* begin_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_begin_time();

  // .google.protobuf.Timestamp end_time = 3;
  bool has_end_time() const;
  private:
  bool _internal_has_end_time() const;
  public:
  void clear_end_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& end_time() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::Timestamp* release_end_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_end_time();
  void set_allocated_end_time(::PROTOBUF_NAMESPACE_ID::Timestamp* end_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_end_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_end_time();
  public:
  void unsafe_arena_set_allocated_end_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* end_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_end_time();

  // .google.protobuf.UInt64Value m_type = 4;
  bool has_m_type() const;
  private:
  bool _internal_has_m_type() const;
  public:
  void clear_m_type();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& m_type() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_m_type();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_m_type();
  void set_allocated_m_type(::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_m_type() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_m_type();
  public:
  void unsafe_arena_set_allocated_m_type(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_m_type();

  // .google.protobuf.UInt64Value parent = 5;
  bool has_parent() const;
  private:
  bool _internal_has_parent() const;
  public:
  void clear_parent();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& parent() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_parent();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_parent();
  void set_allocated_parent(::PROTOBUF_NAMESPACE_ID::UInt64Value* parent);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_parent() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_parent();
  public:
  void unsafe_arena_set_allocated_parent(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* parent);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_parent();

  // .google.protobuf.UInt64Value episode = 6;
  bool has_episode() const;
  private:
  bool _internal_has_episode() const;
  public:
  void clear_episode();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& episode() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_episode();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_episode();
  void set_allocated_episode(::PROTOBUF_NAMESPACE_ID::UInt64Value* episode);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_episode() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_episode();
  public:
  void unsafe_arena_set_allocated_episode(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* episode);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_episode();

  // .google.protobuf.UInt64Value shot = 7;
  bool has_shot() const;
  private:
  bool _internal_has_shot() const;
  public:
  void clear_shot();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& shot() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_shot();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_shot();
  void set_allocated_shot(::PROTOBUF_NAMESPACE_ID::UInt64Value* shot);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_shot() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_shot();
  public:
  void unsafe_arena_set_allocated_shot(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* shot);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_shot();

  // .google.protobuf.UInt64Value season = 8;
  bool has_season() const;
  private:
  bool _internal_has_season() const;
  public:
  void clear_season();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& season() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_season();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_season();
  void set_allocated_season(::PROTOBUF_NAMESPACE_ID::UInt64Value* season);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_season() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_season();
  public:
  void unsafe_arena_set_allocated_season(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* season);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_season();

  // .google.protobuf.StringValue assets = 9;
  bool has_assets() const;
  private:
  bool _internal_has_assets() const;
  public:
  void clear_assets();
  const ::PROTOBUF_NAMESPACE_ID::StringValue& assets() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::StringValue* release_assets();
  ::PROTOBUF_NAMESPACE_ID::StringValue* mutable_assets();
  void set_allocated_assets(::PROTOBUF_NAMESPACE_ID::StringValue* assets);
  private:
  const ::PROTOBUF_NAMESPACE_ID::StringValue& _internal_assets() const;
  ::PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_assets();
  public:
  void unsafe_arena_set_allocated_assets(
      ::PROTOBUF_NAMESPACE_ID::StringValue* assets);
  ::PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_assets();

  // .google.protobuf.UInt64Value beg_off_id = 10;
  bool has_beg_off_id() const;
  private:
  bool _internal_has_beg_off_id() const;
  public:
  void clear_beg_off_id();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& beg_off_id() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_beg_off_id();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_beg_off_id();
  void set_allocated_beg_off_id(::PROTOBUF_NAMESPACE_ID::UInt64Value* beg_off_id);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_beg_off_id() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_beg_off_id();
  public:
  void unsafe_arena_set_allocated_beg_off_id(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* beg_off_id);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_beg_off_id();

  // .google.protobuf.UInt64Value off_size = 11;
  bool has_off_size() const;
  private:
  bool _internal_has_off_size() const;
  public:
  void clear_off_size();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& off_size() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_off_size();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_off_size();
  void set_allocated_off_size(::PROTOBUF_NAMESPACE_ID::UInt64Value* off_size);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_off_size() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_off_size();
  public:
  void unsafe_arena_set_allocated_off_size(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* off_size);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_off_size();

  // uint64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:doodle.metadata_database_filter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* begin_time_;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* end_time_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* parent_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* episode_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* shot_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* season_;
  ::PROTOBUF_NAMESPACE_ID::StringValue* assets_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* beg_off_id_;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* off_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_metadata_5fserver_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// metadata_database

// uint64 id = 1;
inline void metadata_database::clear_id() {
  id_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 metadata_database::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 metadata_database::id() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.id)
  return _internal_id();
}
inline void metadata_database::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void metadata_database::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:doodle.metadata_database.id)
}

// string uuid_path = 2;
inline void metadata_database::clear_uuid_path() {
  uuid_path_.ClearToEmpty();
}
inline const std::string& metadata_database::uuid_path() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.uuid_path)
  return _internal_uuid_path();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void metadata_database::set_uuid_path(ArgT0&& arg0, ArgT... args) {
 
 uuid_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:doodle.metadata_database.uuid_path)
}
inline std::string* metadata_database::mutable_uuid_path() {
  std::string* _s = _internal_mutable_uuid_path();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database.uuid_path)
  return _s;
}
inline const std::string& metadata_database::_internal_uuid_path() const {
  return uuid_path_.Get();
}
inline void metadata_database::_internal_set_uuid_path(const std::string& value) {
  
  uuid_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* metadata_database::_internal_mutable_uuid_path() {
  
  return uuid_path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* metadata_database::release_uuid_path() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database.uuid_path)
  return uuid_path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void metadata_database::set_allocated_uuid_path(std::string* uuid_path) {
  if (uuid_path != nullptr) {
    
  } else {
    
  }
  uuid_path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), uuid_path,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database.uuid_path)
}

// .google.protobuf.UInt64Value parent = 3;
inline bool metadata_database::_internal_has_parent() const {
  return this != internal_default_instance() && parent_ != nullptr;
}
inline bool metadata_database::has_parent() const {
  return _internal_has_parent();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::_internal_parent() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = parent_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::parent() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.parent)
  return _internal_parent();
}
inline void metadata_database::unsafe_arena_set_allocated_parent(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* parent) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(parent_);
  }
  parent_ = parent;
  if (parent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database.parent)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::release_parent() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = parent_;
  parent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database.parent)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = parent_;
  parent_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::_internal_mutable_parent() {
  
  if (parent_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    parent_ = p;
  }
  return parent_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::mutable_parent() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database.parent)
  return _msg;
}
inline void metadata_database::set_allocated_parent(::PROTOBUF_NAMESPACE_ID::UInt64Value* parent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(parent_);
  }
  if (parent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(parent));
    if (message_arena != submessage_arena) {
      parent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parent, submessage_arena);
    }
    
  } else {
    
  }
  parent_ = parent;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database.parent)
}

// .google.protobuf.Timestamp update_time = 4;
inline bool metadata_database::_internal_has_update_time() const {
  return this != internal_default_instance() && update_time_ != nullptr;
}
inline bool metadata_database::has_update_time() const {
  return _internal_has_update_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& metadata_database::_internal_update_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = update_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& metadata_database::update_time() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.update_time)
  return _internal_update_time();
}
inline void metadata_database::unsafe_arena_set_allocated_update_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* update_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_time_);
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database.update_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database::release_update_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = update_time_;
  update_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database::unsafe_arena_release_update_time() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database.update_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = update_time_;
  update_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database::_internal_mutable_update_time() {
  
  if (update_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    update_time_ = p;
  }
  return update_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database::mutable_update_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_update_time();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database.update_time)
  return _msg;
}
inline void metadata_database::set_allocated_update_time(::PROTOBUF_NAMESPACE_ID::Timestamp* update_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_time));
    if (message_arena != submessage_arena) {
      update_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database.update_time)
}

// .google.protobuf.Any Metadata_cereal = 5;
inline bool metadata_database::_internal_has_metadata_cereal() const {
  return this != internal_default_instance() && metadata_cereal_ != nullptr;
}
inline bool metadata_database::has_metadata_cereal() const {
  return _internal_has_metadata_cereal();
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& metadata_database::_internal_metadata_cereal() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = metadata_cereal_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& metadata_database::metadata_cereal() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.Metadata_cereal)
  return _internal_metadata_cereal();
}
inline void metadata_database::unsafe_arena_set_allocated_metadata_cereal(
    ::PROTOBUF_NAMESPACE_ID::Any* metadata_cereal) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_cereal_);
  }
  metadata_cereal_ = metadata_cereal;
  if (metadata_cereal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database.Metadata_cereal)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* metadata_database::release_metadata_cereal() {
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = metadata_cereal_;
  metadata_cereal_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* metadata_database::unsafe_arena_release_metadata_cereal() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database.Metadata_cereal)
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = metadata_cereal_;
  metadata_cereal_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* metadata_database::_internal_mutable_metadata_cereal() {
  
  if (metadata_cereal_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    metadata_cereal_ = p;
  }
  return metadata_cereal_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* metadata_database::mutable_metadata_cereal() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_metadata_cereal();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database.Metadata_cereal)
  return _msg;
}
inline void metadata_database::set_allocated_metadata_cereal(::PROTOBUF_NAMESPACE_ID::Any* metadata_cereal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_cereal_);
  }
  if (metadata_cereal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_cereal));
    if (message_arena != submessage_arena) {
      metadata_cereal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata_cereal, submessage_arena);
    }
    
  } else {
    
  }
  metadata_cereal_ = metadata_cereal;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database.Metadata_cereal)
}

// .google.protobuf.UInt64Value m_type = 6;
inline bool metadata_database::_internal_has_m_type() const {
  return this != internal_default_instance() && m_type_ != nullptr;
}
inline bool metadata_database::has_m_type() const {
  return _internal_has_m_type();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::_internal_m_type() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = m_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::m_type() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.m_type)
  return _internal_m_type();
}
inline void metadata_database::unsafe_arena_set_allocated_m_type(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(m_type_);
  }
  m_type_ = m_type;
  if (m_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database.m_type)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::release_m_type() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = m_type_;
  m_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::unsafe_arena_release_m_type() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database.m_type)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = m_type_;
  m_type_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::_internal_mutable_m_type() {
  
  if (m_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    m_type_ = p;
  }
  return m_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::mutable_m_type() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_m_type();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database.m_type)
  return _msg;
}
inline void metadata_database::set_allocated_m_type(::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(m_type_);
  }
  if (m_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(m_type));
    if (message_arena != submessage_arena) {
      m_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, m_type, submessage_arena);
    }
    
  } else {
    
  }
  m_type_ = m_type;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database.m_type)
}

// .google.protobuf.UInt64Value episode = 7;
inline bool metadata_database::_internal_has_episode() const {
  return this != internal_default_instance() && episode_ != nullptr;
}
inline bool metadata_database::has_episode() const {
  return _internal_has_episode();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::_internal_episode() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = episode_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::episode() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.episode)
  return _internal_episode();
}
inline void metadata_database::unsafe_arena_set_allocated_episode(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* episode) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(episode_);
  }
  episode_ = episode;
  if (episode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database.episode)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::release_episode() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = episode_;
  episode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::unsafe_arena_release_episode() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database.episode)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = episode_;
  episode_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::_internal_mutable_episode() {
  
  if (episode_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    episode_ = p;
  }
  return episode_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::mutable_episode() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_episode();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database.episode)
  return _msg;
}
inline void metadata_database::set_allocated_episode(::PROTOBUF_NAMESPACE_ID::UInt64Value* episode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(episode_);
  }
  if (episode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(episode));
    if (message_arena != submessage_arena) {
      episode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, episode, submessage_arena);
    }
    
  } else {
    
  }
  episode_ = episode;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database.episode)
}

// .google.protobuf.UInt64Value shot = 8;
inline bool metadata_database::_internal_has_shot() const {
  return this != internal_default_instance() && shot_ != nullptr;
}
inline bool metadata_database::has_shot() const {
  return _internal_has_shot();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::_internal_shot() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = shot_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::shot() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.shot)
  return _internal_shot();
}
inline void metadata_database::unsafe_arena_set_allocated_shot(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* shot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shot_);
  }
  shot_ = shot;
  if (shot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database.shot)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::release_shot() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = shot_;
  shot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::unsafe_arena_release_shot() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database.shot)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = shot_;
  shot_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::_internal_mutable_shot() {
  
  if (shot_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    shot_ = p;
  }
  return shot_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::mutable_shot() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_shot();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database.shot)
  return _msg;
}
inline void metadata_database::set_allocated_shot(::PROTOBUF_NAMESPACE_ID::UInt64Value* shot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(shot_);
  }
  if (shot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shot));
    if (message_arena != submessage_arena) {
      shot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shot, submessage_arena);
    }
    
  } else {
    
  }
  shot_ = shot;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database.shot)
}

// .google.protobuf.UInt64Value season = 9;
inline bool metadata_database::_internal_has_season() const {
  return this != internal_default_instance() && season_ != nullptr;
}
inline bool metadata_database::has_season() const {
  return _internal_has_season();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::_internal_season() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = season_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database::season() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.season)
  return _internal_season();
}
inline void metadata_database::unsafe_arena_set_allocated_season(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* season) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(season_);
  }
  season_ = season;
  if (season) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database.season)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::release_season() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = season_;
  season_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::unsafe_arena_release_season() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database.season)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = season_;
  season_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::_internal_mutable_season() {
  
  if (season_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    season_ = p;
  }
  return season_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database::mutable_season() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_season();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database.season)
  return _msg;
}
inline void metadata_database::set_allocated_season(::PROTOBUF_NAMESPACE_ID::UInt64Value* season) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(season_);
  }
  if (season) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(season));
    if (message_arena != submessage_arena) {
      season = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, season, submessage_arena);
    }
    
  } else {
    
  }
  season_ = season;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database.season)
}

// .google.protobuf.StringValue assets = 10;
inline bool metadata_database::_internal_has_assets() const {
  return this != internal_default_instance() && assets_ != nullptr;
}
inline bool metadata_database::has_assets() const {
  return _internal_has_assets();
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& metadata_database::_internal_assets() const {
  const ::PROTOBUF_NAMESPACE_ID::StringValue* p = assets_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::StringValue&>(
      ::PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& metadata_database::assets() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database.assets)
  return _internal_assets();
}
inline void metadata_database::unsafe_arena_set_allocated_assets(
    ::PROTOBUF_NAMESPACE_ID::StringValue* assets) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(assets_);
  }
  assets_ = assets;
  if (assets) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database.assets)
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* metadata_database::release_assets() {
  
  ::PROTOBUF_NAMESPACE_ID::StringValue* temp = assets_;
  assets_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* metadata_database::unsafe_arena_release_assets() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database.assets)
  
  ::PROTOBUF_NAMESPACE_ID::StringValue* temp = assets_;
  assets_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* metadata_database::_internal_mutable_assets() {
  
  if (assets_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaForAllocation());
    assets_ = p;
  }
  return assets_;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* metadata_database::mutable_assets() {
  ::PROTOBUF_NAMESPACE_ID::StringValue* _msg = _internal_mutable_assets();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database.assets)
  return _msg;
}
inline void metadata_database::set_allocated_assets(::PROTOBUF_NAMESPACE_ID::StringValue* assets) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(assets_);
  }
  if (assets) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(assets));
    if (message_arena != submessage_arena) {
      assets = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, assets, submessage_arena);
    }
    
  } else {
    
  }
  assets_ = assets;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database.assets)
}

// -------------------------------------------------------------------

// metadata_database_filter

// uint64 id = 1;
inline void metadata_database_filter::clear_id() {
  id_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 metadata_database_filter::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 metadata_database_filter::id() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.id)
  return _internal_id();
}
inline void metadata_database_filter::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void metadata_database_filter::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:doodle.metadata_database_filter.id)
}

// .google.protobuf.Timestamp begin_time = 2;
inline bool metadata_database_filter::_internal_has_begin_time() const {
  return this != internal_default_instance() && begin_time_ != nullptr;
}
inline bool metadata_database_filter::has_begin_time() const {
  return _internal_has_begin_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& metadata_database_filter::_internal_begin_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = begin_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& metadata_database_filter::begin_time() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.begin_time)
  return _internal_begin_time();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_begin_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* begin_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(begin_time_);
  }
  begin_time_ = begin_time;
  if (begin_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.begin_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database_filter::release_begin_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = begin_time_;
  begin_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database_filter::unsafe_arena_release_begin_time() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.begin_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = begin_time_;
  begin_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database_filter::_internal_mutable_begin_time() {
  
  if (begin_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    begin_time_ = p;
  }
  return begin_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database_filter::mutable_begin_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_begin_time();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.begin_time)
  return _msg;
}
inline void metadata_database_filter::set_allocated_begin_time(::PROTOBUF_NAMESPACE_ID::Timestamp* begin_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(begin_time_);
  }
  if (begin_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(begin_time));
    if (message_arena != submessage_arena) {
      begin_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, begin_time, submessage_arena);
    }
    
  } else {
    
  }
  begin_time_ = begin_time;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.begin_time)
}

// .google.protobuf.Timestamp end_time = 3;
inline bool metadata_database_filter::_internal_has_end_time() const {
  return this != internal_default_instance() && end_time_ != nullptr;
}
inline bool metadata_database_filter::has_end_time() const {
  return _internal_has_end_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& metadata_database_filter::_internal_end_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = end_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& metadata_database_filter::end_time() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.end_time)
  return _internal_end_time();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_end_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* end_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_time_);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.end_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database_filter::release_end_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = end_time_;
  end_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database_filter::unsafe_arena_release_end_time() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.end_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = end_time_;
  end_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database_filter::_internal_mutable_end_time() {
  
  if (end_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    end_time_ = p;
  }
  return end_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* metadata_database_filter::mutable_end_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_end_time();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.end_time)
  return _msg;
}
inline void metadata_database_filter::set_allocated_end_time(::PROTOBUF_NAMESPACE_ID::Timestamp* end_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_time));
    if (message_arena != submessage_arena) {
      end_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.end_time)
}

// .google.protobuf.UInt64Value m_type = 4;
inline bool metadata_database_filter::_internal_has_m_type() const {
  return this != internal_default_instance() && m_type_ != nullptr;
}
inline bool metadata_database_filter::has_m_type() const {
  return _internal_has_m_type();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::_internal_m_type() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = m_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::m_type() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.m_type)
  return _internal_m_type();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_m_type(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(m_type_);
  }
  m_type_ = m_type;
  if (m_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.m_type)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::release_m_type() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = m_type_;
  m_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::unsafe_arena_release_m_type() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.m_type)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = m_type_;
  m_type_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::_internal_mutable_m_type() {
  
  if (m_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    m_type_ = p;
  }
  return m_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::mutable_m_type() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_m_type();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.m_type)
  return _msg;
}
inline void metadata_database_filter::set_allocated_m_type(::PROTOBUF_NAMESPACE_ID::UInt64Value* m_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(m_type_);
  }
  if (m_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(m_type));
    if (message_arena != submessage_arena) {
      m_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, m_type, submessage_arena);
    }
    
  } else {
    
  }
  m_type_ = m_type;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.m_type)
}

// .google.protobuf.UInt64Value parent = 5;
inline bool metadata_database_filter::_internal_has_parent() const {
  return this != internal_default_instance() && parent_ != nullptr;
}
inline bool metadata_database_filter::has_parent() const {
  return _internal_has_parent();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::_internal_parent() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = parent_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::parent() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.parent)
  return _internal_parent();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_parent(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* parent) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(parent_);
  }
  parent_ = parent;
  if (parent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.parent)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::release_parent() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = parent_;
  parent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.parent)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = parent_;
  parent_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::_internal_mutable_parent() {
  
  if (parent_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    parent_ = p;
  }
  return parent_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::mutable_parent() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.parent)
  return _msg;
}
inline void metadata_database_filter::set_allocated_parent(::PROTOBUF_NAMESPACE_ID::UInt64Value* parent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(parent_);
  }
  if (parent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(parent));
    if (message_arena != submessage_arena) {
      parent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parent, submessage_arena);
    }
    
  } else {
    
  }
  parent_ = parent;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.parent)
}

// .google.protobuf.UInt64Value episode = 6;
inline bool metadata_database_filter::_internal_has_episode() const {
  return this != internal_default_instance() && episode_ != nullptr;
}
inline bool metadata_database_filter::has_episode() const {
  return _internal_has_episode();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::_internal_episode() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = episode_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::episode() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.episode)
  return _internal_episode();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_episode(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* episode) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(episode_);
  }
  episode_ = episode;
  if (episode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.episode)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::release_episode() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = episode_;
  episode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::unsafe_arena_release_episode() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.episode)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = episode_;
  episode_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::_internal_mutable_episode() {
  
  if (episode_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    episode_ = p;
  }
  return episode_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::mutable_episode() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_episode();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.episode)
  return _msg;
}
inline void metadata_database_filter::set_allocated_episode(::PROTOBUF_NAMESPACE_ID::UInt64Value* episode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(episode_);
  }
  if (episode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(episode));
    if (message_arena != submessage_arena) {
      episode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, episode, submessage_arena);
    }
    
  } else {
    
  }
  episode_ = episode;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.episode)
}

// .google.protobuf.UInt64Value shot = 7;
inline bool metadata_database_filter::_internal_has_shot() const {
  return this != internal_default_instance() && shot_ != nullptr;
}
inline bool metadata_database_filter::has_shot() const {
  return _internal_has_shot();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::_internal_shot() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = shot_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::shot() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.shot)
  return _internal_shot();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_shot(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* shot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shot_);
  }
  shot_ = shot;
  if (shot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.shot)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::release_shot() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = shot_;
  shot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::unsafe_arena_release_shot() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.shot)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = shot_;
  shot_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::_internal_mutable_shot() {
  
  if (shot_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    shot_ = p;
  }
  return shot_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::mutable_shot() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_shot();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.shot)
  return _msg;
}
inline void metadata_database_filter::set_allocated_shot(::PROTOBUF_NAMESPACE_ID::UInt64Value* shot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(shot_);
  }
  if (shot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shot));
    if (message_arena != submessage_arena) {
      shot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shot, submessage_arena);
    }
    
  } else {
    
  }
  shot_ = shot;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.shot)
}

// .google.protobuf.UInt64Value season = 8;
inline bool metadata_database_filter::_internal_has_season() const {
  return this != internal_default_instance() && season_ != nullptr;
}
inline bool metadata_database_filter::has_season() const {
  return _internal_has_season();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::_internal_season() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = season_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::season() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.season)
  return _internal_season();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_season(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* season) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(season_);
  }
  season_ = season;
  if (season) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.season)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::release_season() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = season_;
  season_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::unsafe_arena_release_season() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.season)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = season_;
  season_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::_internal_mutable_season() {
  
  if (season_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    season_ = p;
  }
  return season_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::mutable_season() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_season();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.season)
  return _msg;
}
inline void metadata_database_filter::set_allocated_season(::PROTOBUF_NAMESPACE_ID::UInt64Value* season) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(season_);
  }
  if (season) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(season));
    if (message_arena != submessage_arena) {
      season = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, season, submessage_arena);
    }
    
  } else {
    
  }
  season_ = season;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.season)
}

// .google.protobuf.StringValue assets = 9;
inline bool metadata_database_filter::_internal_has_assets() const {
  return this != internal_default_instance() && assets_ != nullptr;
}
inline bool metadata_database_filter::has_assets() const {
  return _internal_has_assets();
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& metadata_database_filter::_internal_assets() const {
  const ::PROTOBUF_NAMESPACE_ID::StringValue* p = assets_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::StringValue&>(
      ::PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& metadata_database_filter::assets() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.assets)
  return _internal_assets();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_assets(
    ::PROTOBUF_NAMESPACE_ID::StringValue* assets) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(assets_);
  }
  assets_ = assets;
  if (assets) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.assets)
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* metadata_database_filter::release_assets() {
  
  ::PROTOBUF_NAMESPACE_ID::StringValue* temp = assets_;
  assets_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* metadata_database_filter::unsafe_arena_release_assets() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.assets)
  
  ::PROTOBUF_NAMESPACE_ID::StringValue* temp = assets_;
  assets_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* metadata_database_filter::_internal_mutable_assets() {
  
  if (assets_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaForAllocation());
    assets_ = p;
  }
  return assets_;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* metadata_database_filter::mutable_assets() {
  ::PROTOBUF_NAMESPACE_ID::StringValue* _msg = _internal_mutable_assets();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.assets)
  return _msg;
}
inline void metadata_database_filter::set_allocated_assets(::PROTOBUF_NAMESPACE_ID::StringValue* assets) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(assets_);
  }
  if (assets) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(assets));
    if (message_arena != submessage_arena) {
      assets = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, assets, submessage_arena);
    }
    
  } else {
    
  }
  assets_ = assets;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.assets)
}

// .google.protobuf.UInt64Value beg_off_id = 10;
inline bool metadata_database_filter::_internal_has_beg_off_id() const {
  return this != internal_default_instance() && beg_off_id_ != nullptr;
}
inline bool metadata_database_filter::has_beg_off_id() const {
  return _internal_has_beg_off_id();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::_internal_beg_off_id() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = beg_off_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::beg_off_id() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.beg_off_id)
  return _internal_beg_off_id();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_beg_off_id(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* beg_off_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(beg_off_id_);
  }
  beg_off_id_ = beg_off_id;
  if (beg_off_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.beg_off_id)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::release_beg_off_id() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = beg_off_id_;
  beg_off_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::unsafe_arena_release_beg_off_id() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.beg_off_id)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = beg_off_id_;
  beg_off_id_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::_internal_mutable_beg_off_id() {
  
  if (beg_off_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    beg_off_id_ = p;
  }
  return beg_off_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::mutable_beg_off_id() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_beg_off_id();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.beg_off_id)
  return _msg;
}
inline void metadata_database_filter::set_allocated_beg_off_id(::PROTOBUF_NAMESPACE_ID::UInt64Value* beg_off_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(beg_off_id_);
  }
  if (beg_off_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(beg_off_id));
    if (message_arena != submessage_arena) {
      beg_off_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, beg_off_id, submessage_arena);
    }
    
  } else {
    
  }
  beg_off_id_ = beg_off_id;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.beg_off_id)
}

// .google.protobuf.UInt64Value off_size = 11;
inline bool metadata_database_filter::_internal_has_off_size() const {
  return this != internal_default_instance() && off_size_ != nullptr;
}
inline bool metadata_database_filter::has_off_size() const {
  return _internal_has_off_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::_internal_off_size() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = off_size_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& metadata_database_filter::off_size() const {
  // @@protoc_insertion_point(field_get:doodle.metadata_database_filter.off_size)
  return _internal_off_size();
}
inline void metadata_database_filter::unsafe_arena_set_allocated_off_size(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* off_size) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(off_size_);
  }
  off_size_ = off_size;
  if (off_size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:doodle.metadata_database_filter.off_size)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::release_off_size() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = off_size_;
  off_size_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::unsafe_arena_release_off_size() {
  // @@protoc_insertion_point(field_release:doodle.metadata_database_filter.off_size)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = off_size_;
  off_size_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::_internal_mutable_off_size() {
  
  if (off_size_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    off_size_ = p;
  }
  return off_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* metadata_database_filter::mutable_off_size() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_off_size();
  // @@protoc_insertion_point(field_mutable:doodle.metadata_database_filter.off_size)
  return _msg;
}
inline void metadata_database_filter::set_allocated_off_size(::PROTOBUF_NAMESPACE_ID::UInt64Value* off_size) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(off_size_);
  }
  if (off_size) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(off_size));
    if (message_arena != submessage_arena) {
      off_size = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, off_size, submessage_arena);
    }
    
  } else {
    
  }
  off_size_ = off_size;
  // @@protoc_insertion_point(field_set_allocated:doodle.metadata_database_filter.off_size)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace doodle

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_metadata_5fserver_2eproto
