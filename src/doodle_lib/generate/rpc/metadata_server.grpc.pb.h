// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: metadata_server.proto
#ifndef GRPC_metadata_5fserver_2eproto__INCLUDED
#define GRPC_metadata_5fserver_2eproto__INCLUDED

#include "metadata_server.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace doodle {

class metadata_server final {
 public:
  static constexpr char const* service_full_name() {
    return "doodle.metadata_server";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status install_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::doodle::metadata_database* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>> Asyncinstall_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>>(Asyncinstall_metadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>> PrepareAsyncinstall_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>>(PrepareAsyncinstall_metadataRaw(context, request, cq));
    }
    virtual ::grpc::Status delete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::doodle::metadata_database* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>> Asyncdelete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>>(Asyncdelete_metadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>> PrepareAsyncdelete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>>(PrepareAsyncdelete_metadataRaw(context, request, cq));
    }
    virtual ::grpc::Status update_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::doodle::metadata_database* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>> Asyncupdate_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>>(Asyncupdate_metadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>> PrepareAsyncupdate_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>>(PrepareAsyncupdate_metadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::doodle::metadata_database>> filter_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::doodle::metadata_database>>(filter_metadataRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::doodle::metadata_database>> Asyncfilter_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::doodle::metadata_database>>(Asyncfilter_metadataRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::doodle::metadata_database>> PrepareAsyncfilter_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::doodle::metadata_database>>(PrepareAsyncfilter_metadataRaw(context, request, cq));
    }
    virtual ::grpc::Status install_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::doodle::user_database* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>> Asyncinstall_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>>(Asyncinstall_user_dateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>> PrepareAsyncinstall_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>>(PrepareAsyncinstall_user_dateRaw(context, request, cq));
    }
    virtual ::grpc::Status update_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::doodle::user_database* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>> Asyncupdate_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>>(Asyncupdate_user_dateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>> PrepareAsyncupdate_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>>(PrepareAsyncupdate_user_dateRaw(context, request, cq));
    }
    virtual ::grpc::Status delete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::doodle::user_database* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>> Asyncdelete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>>(Asyncdelete_user_dateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>> PrepareAsyncdelete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>>(PrepareAsyncdelete_user_dateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::doodle::user_database>> filter_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::doodle::user_database>>(filter_user_dateRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::doodle::user_database>> Asyncfilter_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::doodle::user_database>>(Asyncfilter_user_dateRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::doodle::user_database>> PrepareAsyncfilter_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::doodle::user_database>>(PrepareAsyncfilter_user_dateRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void install_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, std::function<void(::grpc::Status)>) = 0;
      virtual void install_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void delete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, std::function<void(::grpc::Status)>) = 0;
      virtual void delete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void update_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, std::function<void(::grpc::Status)>) = 0;
      virtual void update_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void filter_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database_filter* request, ::grpc::ClientReadReactor< ::doodle::metadata_database>* reactor) = 0;
      virtual void install_user_date(::grpc::ClientContext* context, const ::doodle::user_database* request, ::doodle::user_database* response, std::function<void(::grpc::Status)>) = 0;
      virtual void install_user_date(::grpc::ClientContext* context, const ::doodle::user_database* request, ::doodle::user_database* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void update_user_date(::grpc::ClientContext* context, const ::doodle::user_database* request, ::doodle::user_database* response, std::function<void(::grpc::Status)>) = 0;
      virtual void update_user_date(::grpc::ClientContext* context, const ::doodle::user_database* request, ::doodle::user_database* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void delete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter* request, ::doodle::user_database* response, std::function<void(::grpc::Status)>) = 0;
      virtual void delete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter* request, ::doodle::user_database* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void filter_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter* request, ::grpc::ClientReadReactor< ::doodle::user_database>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>* Asyncinstall_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>* PrepareAsyncinstall_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>* Asyncdelete_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>* PrepareAsyncdelete_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>* Asyncupdate_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::metadata_database>* PrepareAsyncupdate_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::doodle::metadata_database>* filter_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::doodle::metadata_database>* Asyncfilter_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::doodle::metadata_database>* PrepareAsyncfilter_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>* Asyncinstall_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>* PrepareAsyncinstall_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>* Asyncupdate_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>* PrepareAsyncupdate_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>* Asyncdelete_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::doodle::user_database>* PrepareAsyncdelete_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::doodle::user_database>* filter_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::doodle::user_database>* Asyncfilter_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::doodle::user_database>* PrepareAsyncfilter_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status install_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::doodle::metadata_database* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>> Asyncinstall_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>>(Asyncinstall_metadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>> PrepareAsyncinstall_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>>(PrepareAsyncinstall_metadataRaw(context, request, cq));
    }
    ::grpc::Status delete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::doodle::metadata_database* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>> Asyncdelete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>>(Asyncdelete_metadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>> PrepareAsyncdelete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>>(PrepareAsyncdelete_metadataRaw(context, request, cq));
    }
    ::grpc::Status update_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::doodle::metadata_database* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>> Asyncupdate_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>>(Asyncupdate_metadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>> PrepareAsyncupdate_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>>(PrepareAsyncupdate_metadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::doodle::metadata_database>> filter_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::doodle::metadata_database>>(filter_metadataRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::doodle::metadata_database>> Asyncfilter_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::doodle::metadata_database>>(Asyncfilter_metadataRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::doodle::metadata_database>> PrepareAsyncfilter_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::doodle::metadata_database>>(PrepareAsyncfilter_metadataRaw(context, request, cq));
    }
    ::grpc::Status install_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::doodle::user_database* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>> Asyncinstall_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>>(Asyncinstall_user_dateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>> PrepareAsyncinstall_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>>(PrepareAsyncinstall_user_dateRaw(context, request, cq));
    }
    ::grpc::Status update_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::doodle::user_database* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>> Asyncupdate_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>>(Asyncupdate_user_dateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>> PrepareAsyncupdate_user_date(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>>(PrepareAsyncupdate_user_dateRaw(context, request, cq));
    }
    ::grpc::Status delete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::doodle::user_database* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>> Asyncdelete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>>(Asyncdelete_user_dateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>> PrepareAsyncdelete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::doodle::user_database>>(PrepareAsyncdelete_user_dateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::doodle::user_database>> filter_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::doodle::user_database>>(filter_user_dateRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::doodle::user_database>> Asyncfilter_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::doodle::user_database>>(Asyncfilter_user_dateRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::doodle::user_database>> PrepareAsyncfilter_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::doodle::user_database>>(PrepareAsyncfilter_user_dateRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void install_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, std::function<void(::grpc::Status)>) override;
      void install_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, ::grpc::ClientUnaryReactor* reactor) override;
      void delete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, std::function<void(::grpc::Status)>) override;
      void delete_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, ::grpc::ClientUnaryReactor* reactor) override;
      void update_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, std::function<void(::grpc::Status)>) override;
      void update_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response, ::grpc::ClientUnaryReactor* reactor) override;
      void filter_metadata(::grpc::ClientContext* context, const ::doodle::metadata_database_filter* request, ::grpc::ClientReadReactor< ::doodle::metadata_database>* reactor) override;
      void install_user_date(::grpc::ClientContext* context, const ::doodle::user_database* request, ::doodle::user_database* response, std::function<void(::grpc::Status)>) override;
      void install_user_date(::grpc::ClientContext* context, const ::doodle::user_database* request, ::doodle::user_database* response, ::grpc::ClientUnaryReactor* reactor) override;
      void update_user_date(::grpc::ClientContext* context, const ::doodle::user_database* request, ::doodle::user_database* response, std::function<void(::grpc::Status)>) override;
      void update_user_date(::grpc::ClientContext* context, const ::doodle::user_database* request, ::doodle::user_database* response, ::grpc::ClientUnaryReactor* reactor) override;
      void delete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter* request, ::doodle::user_database* response, std::function<void(::grpc::Status)>) override;
      void delete_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter* request, ::doodle::user_database* response, ::grpc::ClientUnaryReactor* reactor) override;
      void filter_user_date(::grpc::ClientContext* context, const ::doodle::user_database_filter* request, ::grpc::ClientReadReactor< ::doodle::user_database>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>* Asyncinstall_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>* PrepareAsyncinstall_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>* Asyncdelete_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>* PrepareAsyncdelete_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>* Asyncupdate_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::metadata_database>* PrepareAsyncupdate_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::doodle::metadata_database>* filter_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request) override;
    ::grpc::ClientAsyncReader< ::doodle::metadata_database>* Asyncfilter_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::doodle::metadata_database>* PrepareAsyncfilter_metadataRaw(::grpc::ClientContext* context, const ::doodle::metadata_database_filter& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::user_database>* Asyncinstall_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::user_database>* PrepareAsyncinstall_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::user_database>* Asyncupdate_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::user_database>* PrepareAsyncupdate_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::user_database>* Asyncdelete_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::doodle::user_database>* PrepareAsyncdelete_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::doodle::user_database>* filter_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request) override;
    ::grpc::ClientAsyncReader< ::doodle::user_database>* Asyncfilter_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::doodle::user_database>* PrepareAsyncfilter_user_dateRaw(::grpc::ClientContext* context, const ::doodle::user_database_filter& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_install_metadata_;
    const ::grpc::internal::RpcMethod rpcmethod_delete_metadata_;
    const ::grpc::internal::RpcMethod rpcmethod_update_metadata_;
    const ::grpc::internal::RpcMethod rpcmethod_filter_metadata_;
    const ::grpc::internal::RpcMethod rpcmethod_install_user_date_;
    const ::grpc::internal::RpcMethod rpcmethod_update_user_date_;
    const ::grpc::internal::RpcMethod rpcmethod_delete_user_date_;
    const ::grpc::internal::RpcMethod rpcmethod_filter_user_date_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status install_metadata(::grpc::ServerContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response);
    virtual ::grpc::Status delete_metadata(::grpc::ServerContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response);
    virtual ::grpc::Status update_metadata(::grpc::ServerContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response);
    virtual ::grpc::Status filter_metadata(::grpc::ServerContext* context, const ::doodle::metadata_database_filter* request, ::grpc::ServerWriter< ::doodle::metadata_database>* writer);
    virtual ::grpc::Status install_user_date(::grpc::ServerContext* context, const ::doodle::user_database* request, ::doodle::user_database* response);
    virtual ::grpc::Status update_user_date(::grpc::ServerContext* context, const ::doodle::user_database* request, ::doodle::user_database* response);
    virtual ::grpc::Status delete_user_date(::grpc::ServerContext* context, const ::doodle::user_database_filter* request, ::doodle::user_database* response);
    virtual ::grpc::Status filter_user_date(::grpc::ServerContext* context, const ::doodle::user_database_filter* request, ::grpc::ServerWriter< ::doodle::user_database>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_install_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_install_metadata() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_install_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinstall_metadata(::grpc::ServerContext* context, ::doodle::metadata_database* request, ::grpc::ServerAsyncResponseWriter< ::doodle::metadata_database>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_delete_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_delete_metadata() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_delete_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdelete_metadata(::grpc::ServerContext* context, ::doodle::metadata_database* request, ::grpc::ServerAsyncResponseWriter< ::doodle::metadata_database>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_update_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_update_metadata() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_update_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupdate_metadata(::grpc::ServerContext* context, ::doodle::metadata_database* request, ::grpc::ServerAsyncResponseWriter< ::doodle::metadata_database>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_filter_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_filter_metadata() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_filter_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::metadata_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestfilter_metadata(::grpc::ServerContext* context, ::doodle::metadata_database_filter* request, ::grpc::ServerAsyncWriter< ::doodle::metadata_database>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_install_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_install_user_date() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_install_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinstall_user_date(::grpc::ServerContext* context, ::doodle::user_database* request, ::grpc::ServerAsyncResponseWriter< ::doodle::user_database>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_update_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_update_user_date() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_update_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupdate_user_date(::grpc::ServerContext* context, ::doodle::user_database* request, ::grpc::ServerAsyncResponseWriter< ::doodle::user_database>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_delete_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_delete_user_date() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_delete_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdelete_user_date(::grpc::ServerContext* context, ::doodle::user_database_filter* request, ::grpc::ServerAsyncResponseWriter< ::doodle::user_database>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_filter_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_filter_user_date() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_filter_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::user_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestfilter_user_date(::grpc::ServerContext* context, ::doodle::user_database_filter* request, ::grpc::ServerAsyncWriter< ::doodle::user_database>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(7, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_install_metadata<WithAsyncMethod_delete_metadata<WithAsyncMethod_update_metadata<WithAsyncMethod_filter_metadata<WithAsyncMethod_install_user_date<WithAsyncMethod_update_user_date<WithAsyncMethod_delete_user_date<WithAsyncMethod_filter_user_date<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_install_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_install_metadata() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::doodle::metadata_database, ::doodle::metadata_database>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response) { return this->install_metadata(context, request, response); }));}
    void SetMessageAllocatorFor_install_metadata(
        ::grpc::MessageAllocator< ::doodle::metadata_database, ::doodle::metadata_database>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::doodle::metadata_database, ::doodle::metadata_database>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_install_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* install_metadata(
      ::grpc::CallbackServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_delete_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_delete_metadata() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::doodle::metadata_database, ::doodle::metadata_database>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response) { return this->delete_metadata(context, request, response); }));}
    void SetMessageAllocatorFor_delete_metadata(
        ::grpc::MessageAllocator< ::doodle::metadata_database, ::doodle::metadata_database>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::doodle::metadata_database, ::doodle::metadata_database>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_delete_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* delete_metadata(
      ::grpc::CallbackServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_update_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_update_metadata() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::doodle::metadata_database, ::doodle::metadata_database>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::doodle::metadata_database* request, ::doodle::metadata_database* response) { return this->update_metadata(context, request, response); }));}
    void SetMessageAllocatorFor_update_metadata(
        ::grpc::MessageAllocator< ::doodle::metadata_database, ::doodle::metadata_database>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::doodle::metadata_database, ::doodle::metadata_database>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_update_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* update_metadata(
      ::grpc::CallbackServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_filter_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_filter_metadata() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::doodle::metadata_database_filter, ::doodle::metadata_database>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::doodle::metadata_database_filter* request) { return this->filter_metadata(context, request); }));
    }
    ~WithCallbackMethod_filter_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::metadata_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::doodle::metadata_database>* filter_metadata(
      ::grpc::CallbackServerContext* /*context*/, const ::doodle::metadata_database_filter* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_install_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_install_user_date() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::doodle::user_database, ::doodle::user_database>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::doodle::user_database* request, ::doodle::user_database* response) { return this->install_user_date(context, request, response); }));}
    void SetMessageAllocatorFor_install_user_date(
        ::grpc::MessageAllocator< ::doodle::user_database, ::doodle::user_database>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::doodle::user_database, ::doodle::user_database>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_install_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* install_user_date(
      ::grpc::CallbackServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_update_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_update_user_date() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::doodle::user_database, ::doodle::user_database>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::doodle::user_database* request, ::doodle::user_database* response) { return this->update_user_date(context, request, response); }));}
    void SetMessageAllocatorFor_update_user_date(
        ::grpc::MessageAllocator< ::doodle::user_database, ::doodle::user_database>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::doodle::user_database, ::doodle::user_database>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_update_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* update_user_date(
      ::grpc::CallbackServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_delete_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_delete_user_date() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::doodle::user_database_filter, ::doodle::user_database>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::doodle::user_database_filter* request, ::doodle::user_database* response) { return this->delete_user_date(context, request, response); }));}
    void SetMessageAllocatorFor_delete_user_date(
        ::grpc::MessageAllocator< ::doodle::user_database_filter, ::doodle::user_database>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::doodle::user_database_filter, ::doodle::user_database>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_delete_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* delete_user_date(
      ::grpc::CallbackServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::doodle::user_database* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_filter_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_filter_user_date() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackServerStreamingHandler< ::doodle::user_database_filter, ::doodle::user_database>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::doodle::user_database_filter* request) { return this->filter_user_date(context, request); }));
    }
    ~WithCallbackMethod_filter_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::user_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::doodle::user_database>* filter_user_date(
      ::grpc::CallbackServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_install_metadata<WithCallbackMethod_delete_metadata<WithCallbackMethod_update_metadata<WithCallbackMethod_filter_metadata<WithCallbackMethod_install_user_date<WithCallbackMethod_update_user_date<WithCallbackMethod_delete_user_date<WithCallbackMethod_filter_user_date<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_install_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_install_metadata() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_install_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_delete_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_delete_metadata() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_delete_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_update_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_update_metadata() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_update_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_filter_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_filter_metadata() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_filter_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::metadata_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_install_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_install_user_date() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_install_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_update_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_update_user_date() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_update_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_delete_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_delete_user_date() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_delete_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_filter_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_filter_user_date() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_filter_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::user_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_install_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_install_metadata() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_install_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinstall_metadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_delete_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_delete_metadata() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_delete_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdelete_metadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_update_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_update_metadata() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_update_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupdate_metadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_filter_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_filter_metadata() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_filter_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::metadata_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestfilter_metadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_install_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_install_user_date() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_install_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinstall_user_date(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_update_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_update_user_date() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_update_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupdate_user_date(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_delete_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_delete_user_date() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_delete_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdelete_user_date(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_filter_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_filter_user_date() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_filter_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::user_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestfilter_user_date(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(7, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_install_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_install_metadata() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->install_metadata(context, request, response); }));
    }
    ~WithRawCallbackMethod_install_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* install_metadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_delete_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_delete_metadata() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->delete_metadata(context, request, response); }));
    }
    ~WithRawCallbackMethod_delete_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* delete_metadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_update_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_update_metadata() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->update_metadata(context, request, response); }));
    }
    ~WithRawCallbackMethod_update_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* update_metadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_filter_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_filter_metadata() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->filter_metadata(context, request); }));
    }
    ~WithRawCallbackMethod_filter_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::metadata_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* filter_metadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_install_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_install_user_date() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->install_user_date(context, request, response); }));
    }
    ~WithRawCallbackMethod_install_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status install_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* install_user_date(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_update_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_update_user_date() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->update_user_date(context, request, response); }));
    }
    ~WithRawCallbackMethod_update_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* update_user_date(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_delete_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_delete_user_date() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->delete_user_date(context, request, response); }));
    }
    ~WithRawCallbackMethod_delete_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status delete_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* delete_user_date(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_filter_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_filter_user_date() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->filter_user_date(context, request); }));
    }
    ~WithRawCallbackMethod_filter_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status filter_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::user_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* filter_user_date(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_install_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_install_metadata() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::doodle::metadata_database, ::doodle::metadata_database>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::doodle::metadata_database, ::doodle::metadata_database>* streamer) {
                       return this->Streamedinstall_metadata(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_install_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status install_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedinstall_metadata(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::doodle::metadata_database,::doodle::metadata_database>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_delete_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_delete_metadata() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::doodle::metadata_database, ::doodle::metadata_database>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::doodle::metadata_database, ::doodle::metadata_database>* streamer) {
                       return this->Streameddelete_metadata(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_delete_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status delete_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddelete_metadata(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::doodle::metadata_database,::doodle::metadata_database>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_update_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_update_metadata() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::doodle::metadata_database, ::doodle::metadata_database>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::doodle::metadata_database, ::doodle::metadata_database>* streamer) {
                       return this->Streamedupdate_metadata(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_update_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status update_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database* /*request*/, ::doodle::metadata_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedupdate_metadata(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::doodle::metadata_database,::doodle::metadata_database>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_install_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_install_user_date() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::doodle::user_database, ::doodle::user_database>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::doodle::user_database, ::doodle::user_database>* streamer) {
                       return this->Streamedinstall_user_date(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_install_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status install_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedinstall_user_date(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::doodle::user_database,::doodle::user_database>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_update_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_update_user_date() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::doodle::user_database, ::doodle::user_database>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::doodle::user_database, ::doodle::user_database>* streamer) {
                       return this->Streamedupdate_user_date(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_update_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status update_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedupdate_user_date(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::doodle::user_database,::doodle::user_database>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_delete_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_delete_user_date() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::doodle::user_database_filter, ::doodle::user_database>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::doodle::user_database_filter, ::doodle::user_database>* streamer) {
                       return this->Streameddelete_user_date(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_delete_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status delete_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::doodle::user_database* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddelete_user_date(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::doodle::user_database_filter,::doodle::user_database>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_install_metadata<WithStreamedUnaryMethod_delete_metadata<WithStreamedUnaryMethod_update_metadata<WithStreamedUnaryMethod_install_user_date<WithStreamedUnaryMethod_update_user_date<WithStreamedUnaryMethod_delete_user_date<Service > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_filter_metadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_filter_metadata() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::doodle::metadata_database_filter, ::doodle::metadata_database>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::doodle::metadata_database_filter, ::doodle::metadata_database>* streamer) {
                       return this->Streamedfilter_metadata(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_filter_metadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status filter_metadata(::grpc::ServerContext* /*context*/, const ::doodle::metadata_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::metadata_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status Streamedfilter_metadata(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::doodle::metadata_database_filter,::doodle::metadata_database>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_filter_user_date : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_filter_user_date() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::doodle::user_database_filter, ::doodle::user_database>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::doodle::user_database_filter, ::doodle::user_database>* streamer) {
                       return this->Streamedfilter_user_date(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_filter_user_date() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status filter_user_date(::grpc::ServerContext* /*context*/, const ::doodle::user_database_filter* /*request*/, ::grpc::ServerWriter< ::doodle::user_database>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status Streamedfilter_user_date(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::doodle::user_database_filter,::doodle::user_database>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_filter_metadata<WithSplitStreamingMethod_filter_user_date<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_install_metadata<WithStreamedUnaryMethod_delete_metadata<WithStreamedUnaryMethod_update_metadata<WithSplitStreamingMethod_filter_metadata<WithStreamedUnaryMethod_install_user_date<WithStreamedUnaryMethod_update_user_date<WithStreamedUnaryMethod_delete_user_date<WithSplitStreamingMethod_filter_user_date<Service > > > > > > > > StreamedService;
};

}  // namespace doodle


#endif  // GRPC_metadata_5fserver_2eproto__INCLUDED
