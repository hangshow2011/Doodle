// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MetadataServer.proto

#include "MetadataServer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_MetadataServer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataDb_meta_type_value_MetadataServer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto;
namespace doodle {
class DataDb_meta_type_valueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataDb_meta_type_value> _instance;
} _DataDb_meta_type_value_default_instance_;
class DataDbDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataDb> _instance;
} _DataDb_default_instance_;
class DataDb_FilterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataDb_Filter> _instance;
} _DataDb_Filter_default_instance_;
}  // namespace doodle
static void InitDefaultsscc_info_DataDb_MetadataServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::doodle::_DataDb_default_instance_;
    new (ptr) ::doodle::DataDb();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_DataDb_MetadataServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_DataDb_MetadataServer_2eproto}, {
      &scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_DataDb_meta_type_value_MetadataServer_2eproto.base,}};

static void InitDefaultsscc_info_DataDb_meta_type_value_MetadataServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::doodle::_DataDb_meta_type_value_default_instance_;
    new (ptr) ::doodle::DataDb_meta_type_value();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataDb_meta_type_value_MetadataServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataDb_meta_type_value_MetadataServer_2eproto}, {}};

static void InitDefaultsscc_info_DataDb_Filter_MetadataServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::doodle::_DataDb_Filter_default_instance_;
    new (ptr) ::doodle::DataDb_Filter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_DataDb_Filter_MetadataServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_DataDb_Filter_MetadataServer_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_DataDb_meta_type_value_MetadataServer_2eproto.base,
      &scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_MetadataServer_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_MetadataServer_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_MetadataServer_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_MetadataServer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb_meta_type_value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb_meta_type_value, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb, id_),
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb, uuidpath_),
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb, parent_),
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb, update_time_),
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb, metadata_cereal_),
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb, m_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb_Filter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb_Filter, id_),
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb_Filter, begin_time_),
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb_Filter, end_time_),
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb_Filter, m_type_),
  PROTOBUF_FIELD_OFFSET(::doodle::DataDb_Filter, parent_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::doodle::DataDb_meta_type_value)},
  { 6, -1, sizeof(::doodle::DataDb)},
  { 17, -1, sizeof(::doodle::DataDb_Filter)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::doodle::_DataDb_meta_type_value_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::doodle::_DataDb_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::doodle::_DataDb_Filter_default_instance_),
};

const char descriptor_table_protodef_MetadataServer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024MetadataServer.proto\022\006doodle\032\037google/p"
  "rotobuf/timestamp.proto\032\031google/protobuf"
  "/any.proto\032\036google/protobuf/wrappers.pro"
  "to\032\021UserMessage.proto\"\220\003\n\006DataDb\022\n\n\002id\030\001"
  " \001(\004\022\020\n\010uuidPath\030\002 \001(\t\022,\n\006parent\030\003 \001(\0132\034"
  ".google.protobuf.UInt64Value\022/\n\013update_t"
  "ime\030\004 \001(\0132\032.google.protobuf.Timestamp\022-\n"
  "\017Metadata_cereal\030\005 \001(\0132\024.google.protobuf"
  ".Any\022.\n\006m_type\030\006 \001(\0132\036.doodle.DataDb.met"
  "a_type_value\032:\n\017meta_type_value\022\'\n\005value"
  "\030\001 \001(\0162\030.doodle.DataDb.meta_type\"n\n\tmeta"
  "_type\022\020\n\014unknown_file\020\000\022\020\n\014project_root\020"
  "\001\022\010\n\004file\020\002\022\n\n\006folder\020\003\022\017\n\013derive_file\020\004"
  "\022\026\n\022animation_lib_root\020\005\"\327\001\n\rDataDb_Filt"
  "er\022\n\n\002id\030\001 \001(\004\022.\n\nbegin_time\030\002 \001(\0132\032.goo"
  "gle.protobuf.Timestamp\022,\n\010end_time\030\003 \001(\013"
  "2\032.google.protobuf.Timestamp\022.\n\006m_type\030\004"
  " \001(\0132\036.doodle.DataDb.meta_type_value\022,\n\006"
  "parent\030\005 \001(\0132\034.google.protobuf.UInt64Val"
  "ue2\203\004\n\016MetadataServer\0223\n\017InstallMetadata"
  "\022\016.doodle.DataDb\032\016.doodle.DataDb\"\000\0222\n\016De"
  "leteMetadata\022\016.doodle.DataDb\032\016.doodle.Da"
  "taDb\"\000\0222\n\016UpdateMetadata\022\016.doodle.DataDb"
  "\032\016.doodle.DataDb\"\000\022;\n\016FilterMetadata\022\025.d"
  "oodle.DataDb_Filter\032\016.doodle.DataDb\"\0000\001\022"
  "A\n\017InstallUserDate\022\025.doodle.user_databas"
  "e\032\025.doodle.user_database\"\000\022@\n\016UpdateUser"
  "Date\022\025.doodle.user_database\032\025.doodle.use"
  "r_database\"\000\022G\n\016DeleteUserDate\022\034.doodle."
  "user_database_filter\032\025.doodle.user_datab"
  "ase\"\000\022I\n\016FilterUserDate\022\034.doodle.user_da"
  "tabase_filter\032\025.doodle.user_database\"\0000\001"
  "b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_MetadataServer_2eproto_deps[4] = {
  &::descriptor_table_UserMessage_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_MetadataServer_2eproto_sccs[3] = {
  &scc_info_DataDb_MetadataServer_2eproto.base,
  &scc_info_DataDb_meta_type_value_MetadataServer_2eproto.base,
  &scc_info_DataDb_Filter_MetadataServer_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_MetadataServer_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MetadataServer_2eproto = {
  false, false, descriptor_table_protodef_MetadataServer_2eproto, "MetadataServer.proto", 1288,
  &descriptor_table_MetadataServer_2eproto_once, descriptor_table_MetadataServer_2eproto_sccs, descriptor_table_MetadataServer_2eproto_deps, 3, 4,
  schemas, file_default_instances, TableStruct_MetadataServer_2eproto::offsets,
  file_level_metadata_MetadataServer_2eproto, 3, file_level_enum_descriptors_MetadataServer_2eproto, file_level_service_descriptors_MetadataServer_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_MetadataServer_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_MetadataServer_2eproto)), true);
namespace doodle {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataDb_meta_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MetadataServer_2eproto);
  return file_level_enum_descriptors_MetadataServer_2eproto[0];
}
bool DataDb_meta_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr DataDb_meta_type DataDb::unknown_file;
constexpr DataDb_meta_type DataDb::project_root;
constexpr DataDb_meta_type DataDb::file;
constexpr DataDb_meta_type DataDb::folder;
constexpr DataDb_meta_type DataDb::derive_file;
constexpr DataDb_meta_type DataDb::animation_lib_root;
constexpr DataDb_meta_type DataDb::meta_type_MIN;
constexpr DataDb_meta_type DataDb::meta_type_MAX;
constexpr int DataDb::meta_type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class DataDb_meta_type_value::_Internal {
 public:
};

DataDb_meta_type_value::DataDb_meta_type_value(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:doodle.DataDb.meta_type_value)
}
DataDb_meta_type_value::DataDb_meta_type_value(const DataDb_meta_type_value& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:doodle.DataDb.meta_type_value)
}

void DataDb_meta_type_value::SharedCtor() {
  value_ = 0;
}

DataDb_meta_type_value::~DataDb_meta_type_value() {
  // @@protoc_insertion_point(destructor:doodle.DataDb.meta_type_value)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataDb_meta_type_value::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DataDb_meta_type_value::ArenaDtor(void* object) {
  DataDb_meta_type_value* _this = reinterpret_cast< DataDb_meta_type_value* >(object);
  (void)_this;
}
void DataDb_meta_type_value::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataDb_meta_type_value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataDb_meta_type_value& DataDb_meta_type_value::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataDb_meta_type_value_MetadataServer_2eproto.base);
  return *internal_default_instance();
}


void DataDb_meta_type_value::Clear() {
// @@protoc_insertion_point(message_clear_start:doodle.DataDb.meta_type_value)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataDb_meta_type_value::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .doodle.DataDb.meta_type value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_value(static_cast<::doodle::DataDb_meta_type>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataDb_meta_type_value::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:doodle.DataDb.meta_type_value)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .doodle.DataDb.meta_type value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:doodle.DataDb.meta_type_value)
  return target;
}

size_t DataDb_meta_type_value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:doodle.DataDb.meta_type_value)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .doodle.DataDb.meta_type value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataDb_meta_type_value::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:doodle.DataDb.meta_type_value)
  GOOGLE_DCHECK_NE(&from, this);
  const DataDb_meta_type_value* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataDb_meta_type_value>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:doodle.DataDb.meta_type_value)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:doodle.DataDb.meta_type_value)
    MergeFrom(*source);
  }
}

void DataDb_meta_type_value::MergeFrom(const DataDb_meta_type_value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:doodle.DataDb.meta_type_value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void DataDb_meta_type_value::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:doodle.DataDb.meta_type_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataDb_meta_type_value::CopyFrom(const DataDb_meta_type_value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:doodle.DataDb.meta_type_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataDb_meta_type_value::IsInitialized() const {
  return true;
}

void DataDb_meta_type_value::InternalSwap(DataDb_meta_type_value* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataDb_meta_type_value::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DataDb::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::UInt64Value& parent(const DataDb* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& update_time(const DataDb* msg);
  static const PROTOBUF_NAMESPACE_ID::Any& metadata_cereal(const DataDb* msg);
  static const ::doodle::DataDb_meta_type_value& m_type(const DataDb* msg);
};

const PROTOBUF_NAMESPACE_ID::UInt64Value&
DataDb::_Internal::parent(const DataDb* msg) {
  return *msg->parent_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
DataDb::_Internal::update_time(const DataDb* msg) {
  return *msg->update_time_;
}
const PROTOBUF_NAMESPACE_ID::Any&
DataDb::_Internal::metadata_cereal(const DataDb* msg) {
  return *msg->metadata_cereal_;
}
const ::doodle::DataDb_meta_type_value&
DataDb::_Internal::m_type(const DataDb* msg) {
  return *msg->m_type_;
}
void DataDb::clear_parent() {
  if (GetArena() == nullptr && parent_ != nullptr) {
    delete parent_;
  }
  parent_ = nullptr;
}
void DataDb::clear_update_time() {
  if (GetArena() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
void DataDb::clear_metadata_cereal() {
  if (GetArena() == nullptr && metadata_cereal_ != nullptr) {
    delete metadata_cereal_;
  }
  metadata_cereal_ = nullptr;
}
DataDb::DataDb(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:doodle.DataDb)
}
DataDb::DataDb(const DataDb& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuidpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuidpath().empty()) {
    uuidpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuidpath(), 
      GetArena());
  }
  if (from._internal_has_parent()) {
    parent_ = new PROTOBUF_NAMESPACE_ID::UInt64Value(*from.parent_);
  } else {
    parent_ = nullptr;
  }
  if (from._internal_has_update_time()) {
    update_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  if (from._internal_has_metadata_cereal()) {
    metadata_cereal_ = new PROTOBUF_NAMESPACE_ID::Any(*from.metadata_cereal_);
  } else {
    metadata_cereal_ = nullptr;
  }
  if (from._internal_has_m_type()) {
    m_type_ = new ::doodle::DataDb_meta_type_value(*from.m_type_);
  } else {
    m_type_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:doodle.DataDb)
}

void DataDb::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataDb_MetadataServer_2eproto.base);
  uuidpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&parent_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&parent_)) + sizeof(id_));
}

DataDb::~DataDb() {
  // @@protoc_insertion_point(destructor:doodle.DataDb)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataDb::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuidpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parent_;
  if (this != internal_default_instance()) delete update_time_;
  if (this != internal_default_instance()) delete metadata_cereal_;
  if (this != internal_default_instance()) delete m_type_;
}

void DataDb::ArenaDtor(void* object) {
  DataDb* _this = reinterpret_cast< DataDb* >(object);
  (void)_this;
}
void DataDb::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataDb::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataDb& DataDb::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataDb_MetadataServer_2eproto.base);
  return *internal_default_instance();
}


void DataDb::Clear() {
// @@protoc_insertion_point(message_clear_start:doodle.DataDb)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuidpath_.ClearToEmpty();
  if (GetArena() == nullptr && parent_ != nullptr) {
    delete parent_;
  }
  parent_ = nullptr;
  if (GetArena() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  if (GetArena() == nullptr && metadata_cereal_ != nullptr) {
    delete metadata_cereal_;
  }
  metadata_cereal_ = nullptr;
  if (GetArena() == nullptr && m_type_ != nullptr) {
    delete m_type_;
  }
  m_type_ = nullptr;
  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataDb::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuidPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uuidpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "doodle.DataDb.uuidPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt64Value parent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_parent(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp update_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any Metadata_cereal = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata_cereal(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .doodle.DataDb.meta_type_value m_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_m_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataDb::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:doodle.DataDb)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // string uuidPath = 2;
  if (this->uuidpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuidpath().data(), static_cast<int>(this->_internal_uuidpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "doodle.DataDb.uuidPath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uuidpath(), target);
  }

  // .google.protobuf.UInt64Value parent = 3;
  if (this->has_parent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::parent(this), target, stream);
  }

  // .google.protobuf.Timestamp update_time = 4;
  if (this->has_update_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::update_time(this), target, stream);
  }

  // .google.protobuf.Any Metadata_cereal = 5;
  if (this->has_metadata_cereal()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::metadata_cereal(this), target, stream);
  }

  // .doodle.DataDb.meta_type_value m_type = 6;
  if (this->has_m_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::m_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:doodle.DataDb)
  return target;
}

size_t DataDb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:doodle.DataDb)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuidPath = 2;
  if (this->uuidpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuidpath());
  }

  // .google.protobuf.UInt64Value parent = 3;
  if (this->has_parent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parent_);
  }

  // .google.protobuf.Timestamp update_time = 4;
  if (this->has_update_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.protobuf.Any Metadata_cereal = 5;
  if (this->has_metadata_cereal()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_cereal_);
  }

  // .doodle.DataDb.meta_type_value m_type = 6;
  if (this->has_m_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *m_type_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataDb::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:doodle.DataDb)
  GOOGLE_DCHECK_NE(&from, this);
  const DataDb* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataDb>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:doodle.DataDb)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:doodle.DataDb)
    MergeFrom(*source);
  }
}

void DataDb::MergeFrom(const DataDb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:doodle.DataDb)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuidpath().size() > 0) {
    _internal_set_uuidpath(from._internal_uuidpath());
  }
  if (from.has_parent()) {
    _internal_mutable_parent()->PROTOBUF_NAMESPACE_ID::UInt64Value::MergeFrom(from._internal_parent());
  }
  if (from.has_update_time()) {
    _internal_mutable_update_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_update_time());
  }
  if (from.has_metadata_cereal()) {
    _internal_mutable_metadata_cereal()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_metadata_cereal());
  }
  if (from.has_m_type()) {
    _internal_mutable_m_type()->::doodle::DataDb_meta_type_value::MergeFrom(from._internal_m_type());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DataDb::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:doodle.DataDb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataDb::CopyFrom(const DataDb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:doodle.DataDb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataDb::IsInitialized() const {
  return true;
}

void DataDb::InternalSwap(DataDb* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uuidpath_.Swap(&other->uuidpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataDb, id_)
      + sizeof(DataDb::id_)
      - PROTOBUF_FIELD_OFFSET(DataDb, parent_)>(
          reinterpret_cast<char*>(&parent_),
          reinterpret_cast<char*>(&other->parent_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DataDb::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DataDb_Filter::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& begin_time(const DataDb_Filter* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& end_time(const DataDb_Filter* msg);
  static const ::doodle::DataDb_meta_type_value& m_type(const DataDb_Filter* msg);
  static const PROTOBUF_NAMESPACE_ID::UInt64Value& parent(const DataDb_Filter* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
DataDb_Filter::_Internal::begin_time(const DataDb_Filter* msg) {
  return *msg->begin_time_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
DataDb_Filter::_Internal::end_time(const DataDb_Filter* msg) {
  return *msg->end_time_;
}
const ::doodle::DataDb_meta_type_value&
DataDb_Filter::_Internal::m_type(const DataDb_Filter* msg) {
  return *msg->m_type_;
}
const PROTOBUF_NAMESPACE_ID::UInt64Value&
DataDb_Filter::_Internal::parent(const DataDb_Filter* msg) {
  return *msg->parent_;
}
void DataDb_Filter::clear_begin_time() {
  if (GetArena() == nullptr && begin_time_ != nullptr) {
    delete begin_time_;
  }
  begin_time_ = nullptr;
}
void DataDb_Filter::clear_end_time() {
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
void DataDb_Filter::clear_parent() {
  if (GetArena() == nullptr && parent_ != nullptr) {
    delete parent_;
  }
  parent_ = nullptr;
}
DataDb_Filter::DataDb_Filter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:doodle.DataDb_Filter)
}
DataDb_Filter::DataDb_Filter(const DataDb_Filter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_begin_time()) {
    begin_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.begin_time_);
  } else {
    begin_time_ = nullptr;
  }
  if (from._internal_has_end_time()) {
    end_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  if (from._internal_has_m_type()) {
    m_type_ = new ::doodle::DataDb_meta_type_value(*from.m_type_);
  } else {
    m_type_ = nullptr;
  }
  if (from._internal_has_parent()) {
    parent_ = new PROTOBUF_NAMESPACE_ID::UInt64Value(*from.parent_);
  } else {
    parent_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:doodle.DataDb_Filter)
}

void DataDb_Filter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataDb_Filter_MetadataServer_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&begin_time_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&begin_time_)) + sizeof(id_));
}

DataDb_Filter::~DataDb_Filter() {
  // @@protoc_insertion_point(destructor:doodle.DataDb_Filter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataDb_Filter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete begin_time_;
  if (this != internal_default_instance()) delete end_time_;
  if (this != internal_default_instance()) delete m_type_;
  if (this != internal_default_instance()) delete parent_;
}

void DataDb_Filter::ArenaDtor(void* object) {
  DataDb_Filter* _this = reinterpret_cast< DataDb_Filter* >(object);
  (void)_this;
}
void DataDb_Filter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataDb_Filter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataDb_Filter& DataDb_Filter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataDb_Filter_MetadataServer_2eproto.base);
  return *internal_default_instance();
}


void DataDb_Filter::Clear() {
// @@protoc_insertion_point(message_clear_start:doodle.DataDb_Filter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && begin_time_ != nullptr) {
    delete begin_time_;
  }
  begin_time_ = nullptr;
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  if (GetArena() == nullptr && m_type_ != nullptr) {
    delete m_type_;
  }
  m_type_ = nullptr;
  if (GetArena() == nullptr && parent_ != nullptr) {
    delete parent_;
  }
  parent_ = nullptr;
  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataDb_Filter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp begin_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_begin_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp end_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .doodle.DataDb.meta_type_value m_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_m_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt64Value parent = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_parent(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataDb_Filter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:doodle.DataDb_Filter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // .google.protobuf.Timestamp begin_time = 2;
  if (this->has_begin_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::begin_time(this), target, stream);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::end_time(this), target, stream);
  }

  // .doodle.DataDb.meta_type_value m_type = 4;
  if (this->has_m_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::m_type(this), target, stream);
  }

  // .google.protobuf.UInt64Value parent = 5;
  if (this->has_parent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::parent(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:doodle.DataDb_Filter)
  return target;
}

size_t DataDb_Filter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:doodle.DataDb_Filter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp begin_time = 2;
  if (this->has_begin_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *begin_time_);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // .doodle.DataDb.meta_type_value m_type = 4;
  if (this->has_m_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *m_type_);
  }

  // .google.protobuf.UInt64Value parent = 5;
  if (this->has_parent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parent_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataDb_Filter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:doodle.DataDb_Filter)
  GOOGLE_DCHECK_NE(&from, this);
  const DataDb_Filter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataDb_Filter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:doodle.DataDb_Filter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:doodle.DataDb_Filter)
    MergeFrom(*source);
  }
}

void DataDb_Filter::MergeFrom(const DataDb_Filter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:doodle.DataDb_Filter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_begin_time()) {
    _internal_mutable_begin_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_begin_time());
  }
  if (from.has_end_time()) {
    _internal_mutable_end_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_end_time());
  }
  if (from.has_m_type()) {
    _internal_mutable_m_type()->::doodle::DataDb_meta_type_value::MergeFrom(from._internal_m_type());
  }
  if (from.has_parent()) {
    _internal_mutable_parent()->PROTOBUF_NAMESPACE_ID::UInt64Value::MergeFrom(from._internal_parent());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DataDb_Filter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:doodle.DataDb_Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataDb_Filter::CopyFrom(const DataDb_Filter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:doodle.DataDb_Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataDb_Filter::IsInitialized() const {
  return true;
}

void DataDb_Filter::InternalSwap(DataDb_Filter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataDb_Filter, id_)
      + sizeof(DataDb_Filter::id_)
      - PROTOBUF_FIELD_OFFSET(DataDb_Filter, begin_time_)>(
          reinterpret_cast<char*>(&begin_time_),
          reinterpret_cast<char*>(&other->begin_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DataDb_Filter::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace doodle
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::doodle::DataDb_meta_type_value* Arena::CreateMaybeMessage< ::doodle::DataDb_meta_type_value >(Arena* arena) {
  return Arena::CreateMessageInternal< ::doodle::DataDb_meta_type_value >(arena);
}
template<> PROTOBUF_NOINLINE ::doodle::DataDb* Arena::CreateMaybeMessage< ::doodle::DataDb >(Arena* arena) {
  return Arena::CreateMessageInternal< ::doodle::DataDb >(arena);
}
template<> PROTOBUF_NOINLINE ::doodle::DataDb_Filter* Arena::CreateMaybeMessage< ::doodle::DataDb_Filter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::doodle::DataDb_Filter >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
